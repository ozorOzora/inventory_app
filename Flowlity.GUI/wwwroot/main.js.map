{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/components/availability-chart/availability-chart.component.html","webpack:///./src/app/components/availability-table/availability-table.component.html","webpack:///./src/app/components/product-selector/product-selector.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/availability-chart/availability-chart.component.css","webpack:///./src/app/components/availability-chart/availability-chart.component.ts","webpack:///./src/app/components/availability-table/availability-table.component.css","webpack:///./src/app/components/availability-table/availability-table.component.ts","webpack:///./src/app/components/product-selector/product-selector.component.css","webpack:///./src/app/components/product-selector/product-selector.component.ts","webpack:///./src/app/services/availability.service.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"    <!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n    <h1>\\r\\n        Flowlity\\r\\n    </h1>\\r\\n</div>\\r\\n\\r\\n<app-product-selector (productSelected)=\\\"getAvailabilities($event)\\\"></app-product-selector>\\r\\n<app-availability-chart [availabilities]=\\\"availabilities\\\"></app-availability-chart>\\r\\n<app-availability-table [availabilities]=\\\"availabilities\\\"></app-availability-table>\"","module.exports = \"<apx-chart [series]=\\\"series\\\"\\r\\n           [title]=\\\"title\\\"\\r\\n           [chart]=\\\"chart\\\"\\r\\n           [colors]=\\\"['black']\\\"\\r\\n           [fill]=\\\"fill\\\"\\r\\n           [dataLabels]=\\\"dataLabels\\\"\\r\\n           [xaxis]=\\\"xaxis\\\"\\r\\n           [yaxis]=\\\"yaxis\\\"></apx-chart>\"","module.exports = \"<table mat-table [dataSource]=\\\"availabilities\\\">\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let availability\\\"> {{availability.productName}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"inventory_level\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Inventory level </th>\\r\\n        <td mat-cell *matCellDef=\\\"let availability\\\"> {{availability.inventoryLevel}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"date\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Date </th>\\r\\n        <td mat-cell *matCellDef=\\\"let availability\\\"> {{availability.date}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\"","module.exports = \"<mat-form-field>\\r\\n    <mat-label>Select a product</mat-label>\\r\\n    <mat-select (selectionChange)=\\\"selectProduct($event)\\\">\\r\\n        <mat-option *ngFor=\\\"let product of products\\\" [value]=\\\"product\\\">\\r\\n            {{product.name}}\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</mat-form-field>\"","import { Component } from '@angular/core';\r\nimport { Product } from './models/product';\r\nimport { AvailabilityService } from './services/availability.service';\r\nimport { Availability } from './models/availability';\r\n\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styles: []\r\n})\r\nexport class AppComponent {\r\n    availabilities: Availability[] = [];\r\n\r\n    constructor(\r\n        private _availabilityService: AvailabilityService\r\n    ) { }\r\n\r\n    getAvailabilities(product: Product) {\r\n        this._availabilityService.findAll(product.id)\r\n            .subscribe(availabilities => {\r\n                console.log(availabilities);\r\n                this.availabilities = availabilities\r\n            })\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatSelectModule, MatTableModule } from '@angular/material';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProductSelectorComponent } from './components/product-selector/product-selector.component';\r\nimport { AvailabilityTableComponent } from './components/availability-table/availability-table.component';\r\nimport { AvailabilityChartComponent } from './components/availability-chart/availability-chart.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProductSelectorComponent,\r\n    AvailabilityTableComponent,\r\n    AvailabilityChartComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      HttpClientModule,\r\n      MatSelectModule,\r\n      MatTableModule,\r\n      NgApexchartsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXZhaWxhYmlsaXR5LWNoYXJ0L2F2YWlsYWJpbGl0eS1jaGFydC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Availability } from '../../models/availability';\r\nimport { ChartComponent, ApexChart, ApexAxisChartSeries, ApexDataLabels, ApexXAxis, ApexYAxis, ApexFill } from 'ng-apexcharts';\r\n\n@Component({\n    selector: 'app-availability-chart',\n    templateUrl: './availability-chart.component.html',\n    styleUrls: ['./availability-chart.component.css']\n})\nexport class AvailabilityChartComponent implements OnInit {\n    @Input() availabilities: Availability[];\r\n    series: ApexAxisChartSeries\r\n    chart: ApexChart;\r\n    dataLabels: ApexDataLabels;\r\n    xaxis: ApexXAxis;\r\n    yaxis: ApexYAxis;\r\n    fill: ApexFill;\r\n\n    constructor() { }\n\n    ngOnInit() {\n        this.chart = {\r\n            type: 'area',\r\n            stacked: false,\r\n            height: 350,\r\n            zoom: {\r\n                type: 'x',\r\n                enabled: true\r\n            },\r\n            toolbar: {\r\n                autoSelected: 'zoom'\r\n            }\r\n        };\n        this.dataLabels = {\n            enabled: false\r\n        };\n        this.xaxis = {\n            type: \"datetime\"\r\n        };\n        this.fill = {\n            type: 'gradient',\r\n            gradient: {\r\n                shadeIntensity: 1,\r\n                inverseColors: false,\r\n                opacityFrom: 0.5,\r\n                opacityTo: 0,\r\n                stops: [0, 100]\r\n            }\n        };\n        this.yaxis = {\n            min: 0,\r\n            max: 100,\r\n            title: {\r\n                text: \"Inventory level\"\r\n            }\r\n        };\n    }\n\n    ngOnChanges() {\n        this.series = [{\r\n            name: \"Inventory level\",\r\n            data: this.availabilities.map(availability => {\r\n                return {\r\n                    x: new Date(availability.date).getTime() as unknown as string, // ng-apexcharts thinks x's type is string, it shouldn't be\r\n                    y: availability.inventoryLevel\r\n                }\r\n            })\r\n        }];\r\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXZhaWxhYmlsaXR5LXRhYmxlL2F2YWlsYWJpbGl0eS10YWJsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, Input } from '@angular/core';\r\nimport { Availability } from 'src/app/models/availability';\r\n\r\n@Component({\r\n    selector: 'app-availability-table',\r\n    templateUrl: './availability-table.component.html',\r\n    styleUrls: ['./availability-table.component.css']\r\n})\r\nexport class AvailabilityTableComponent {\r\n    @Input() availabilities: Availability[];\r\n    displayedColumns = ['name', 'inventory_level', 'date']\r\n\r\n    constructor() { }\r\n\r\n    ngOnChanges() {\r\n        console.log(this.availabilities);\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdC1zZWxlY3Rvci9wcm9kdWN0LXNlbGVjdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { MatSelectChange } from \"@angular/material\"\r\nimport { ProductService } from '../../services/product.service';\r\nimport { Product } from '../../models/product';\r\n\r\n@Component({\r\n    selector: 'app-product-selector',\r\n    templateUrl: './product-selector.component.html',\r\n    styleUrls: ['./product-selector.component.css']\r\n})\r\nexport class ProductSelectorComponent implements OnInit {\r\n    @Output() productSelected: EventEmitter<Product> = new EventEmitter()\r\n    products: Product[];\r\n    constructor(\r\n        private _productService: ProductService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this._productService.findAll().subscribe(\r\n            products => { this.products = products }\r\n        )\r\n    }\r\n\r\n    selectProduct(selectedChange: MatSelectChange) {\r\n        console.log(selectedChange.value);\r\n        this.productSelected.emit(selectedChange.value);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\r\nimport { Availability } from '../models/availability';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\n  providedIn: 'root'\n})\nexport class AvailabilityService {\n\n    constructor(\n        private _http: HttpClient\n    ) { }\n\n    findAll(productId: number): Observable<Availability[]> {\n        return this._http.get<Availability[]>(`/availabilities/${productId}`);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Product } from \"../models/product\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n    constructor(\n        private _http: HttpClient\n    ) { }\n\n    findAll(): Observable<Product[]> {\n        return this._http.get<Product[]>('/products');\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}